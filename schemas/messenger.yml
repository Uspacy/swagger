paths:
# messengerService begin
  /messenger/v1/chats:
    get:
      parameters:
        - name: type
          required: true
          in: query
          schema:
            type: string
      tags: messengerService
      responses:
        '200':
          description: The chats list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatResponseDto'
      security:
        - bearerAuth: [ ]
    post:
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatDto'
      responses:
        '200':
          description: Created chat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
    patch:
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChatDto'
      responses:
        '200':
          description: Updated chat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/chats/{id}:
    get:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Chat by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
    delete:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Deleted chat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/chats/{id}/members:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Updated chat with new members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
    delete:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Updated chat with new members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/chats/{id}/leave:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Updated chat with new members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/chats/{id}/setActiveValue:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Updated chat with active value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/chats/{id}/pin:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/chats/{id}/unpin:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/chats/{id}/mute:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/chats/{id}/unmute:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages:
    get:
      parameters:
        - name: chatId
          required: true
          in: query
          schema:
            type: string
        - name: lastTimestamp
          required: true
          in: query
          schema:
            type: string
        - name: firstTimestamp
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: unreadFirst
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: The messages list by chat
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponseDto'
      security:
        - bearerAuth: [ ]

    post:
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageDto'
      responses:
        '200':
          description: The created message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
    patch:
      parameters: []
      responses:
        '200':
          description: The updated message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/readMessages:
    post:
      parameters: []
      responses:
        '201':
          description: ''
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/{id}/goToMessage:
    get:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/forwardMessages:
    post:
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/getPinnedMessages:
    get:
      parameters:
        - name: chatId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/{id}/pin:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/{id}/unpin:
    post:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/deleteMessages:
    delete:
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/readAll:
    post:
      parameters: []
      responses:
        '201':
          description: ''
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/messages/{id}:
    delete:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/external-lines:
    get:
      parameters: []
      responses:
        '200':
          description: The external lines items list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExternalLineResponseDto'
      security:
        - bearerAuth: [ ]

    post:
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalLineCreateDto'
      responses:
        '200':
          description: The created external line
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLineResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/external-lines/{id}:
    get:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: The external line
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLineResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
    delete:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: The deleted external line
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLineResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
    patch:
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalLineUpdateDto'
      responses:
        '200':
          description: The updated external line
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalLineResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  /messenger/v1/search/messages:
    get:
      parameters:
        - name: query
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: string
        - name: date
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageResponseDto'
      security:
        - bearerAuth: [ ]
  /messenger/v1/search/{chatId}:
    get:
      parameters:
        - name: query
          required: true
          in: query
          schema:
            type: string
        - name: chatId
          required: true
          in: path
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
        - name: date
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponseDto'
      tags: messengerService
      security:
        - bearerAuth: [ ]
  # messengerService end

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    Forbidden:
      description: Forbidden
    NoContent:
      description: No Content

    # messenger start

    ExternalLineResponseDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
        externalId:
          type: string
        timestamp:
          type: number
        portal:
          type: string
        phoneNumber:
          type: string
      required:
        - id
        - name
        - icon
        - externalId
        - timestamp
        - portal
        - phoneNumber
    AttachedFile:
      type: object
      properties:
        id:
          type: number
        entityId:
          type: string
        entityType:
          type: string
        lastModified:
          type: number
        originalFilename:
          type: string
        size:
          type: string
        url:
          type: string
      required:
        - id
        - entityId
        - entityType
        - lastModified
        - originalFilename
        - size
        - url
    MessageRelation:
      type: object
      properties:
        action:
          type: string
          enum:
            - create
            - update
            - delete
        service:
          type: string
          enum:
            - crm
        entity:
          type: string
          enum:
            - lead
            - contact
            - deal
        name:
          type: string
        pictureUrl:
          type: string
        entityId:
          type: string
      required:
        - action
        - service
        - entity
        - name
        - pictureUrl
        - entityId
    Reference:
      type: object
      properties:
        chatId:
          type: string
        authorId:
          type: number
        refMessageId:
          type: string
      required:
        - chatId
        - authorId
        - refMessageId
    MessageResponseDto:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: number
        message:
          type: string
        type:
          type: string
          enum:
            - MESSAGE
            - AUDIO
            - VIDEO
            - GIF
            - SYSTEM
        chatId:
          type: string
        parentMessage:
          $ref: '#/components/schemas/MessageResponseDto'
        readBy:
          type: array
          items:
            type: number
        externalLine:
          $ref: '#/components/schemas/ExternalLineResponseDto'
        attachedFiles:
          type: array
          items:
            $ref: '#/components/schemas/AttachedFile'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/MessageRelation'
        externalAuthorId:
          type: string
        externalId:
          type: string
        ref:
          $ref: '#/components/schemas/Reference'
      required:
        - id
        - timestamp
        - message
        - type
        - chatId
        - parentMessage
        - readBy
        - externalLine
        - attachedFiles
        - relations
        - externalAuthorId
        - externalId
        - ref
    ChatMeta:
      type: object
      properties:
        type:
          type: string
          enum:
            - phone
            - username
            - facebook
            - instagram
            - telegram
            - twitter
            - viber
            - whatsapp
        value:
          type: string
      required:
        - type
        - value
    ChatResponseDto:
      type: object
      properties:
        id:
          type: string
        members:
          type: string
        timestamp:
          type: number
        ownerId:
          type: number
        name:
          type: string
        pictureUrl:
          type: string
        type:
          type: string
          enum:
            - PRIVATE
            - PUBLIC
            - GROUP
            - DIRECT
            - EXTERNAL
        groupId:
          type: number
        portals:
          type: array
          items:
            type: string
        externalLines:
          type: array
          items:
            $ref: '#/components/schemas/ExternalLineResponseDto'
        lastMessage:
          $ref: '#/components/schemas/MessageResponseDto'
        meta:
          type: array
          items:
            $ref: '#/components/schemas/ChatMeta'
        active:
          type: boolean
        unreadCount:
          type: number
      required:
        - id
        - members
        - timestamp
        - ownerId
        - name
        - pictureUrl
        - type
        - groupId
        - portals
        - externalLines
        - lastMessage
        - meta
        - active
        - unreadCount
    CreateChatDto:
      type: object
      properties:
        members:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
            - PRIVATE
            - PUBLIC
            - GROUP
            - DIRECT
            - EXTERNAL
        ownerId:
          type: number
        name:
          type: string
        pictureUrl:
          type: string
        groupId:
          type: number
        externalLines:
          type: array
          items:
            type: string
        meta:
          type: array
          items:
            $ref: '#/components/schemas/ChatMeta'
      required:
        - members
        - type
    UpdateChatDto:
      type: object
      properties:
        id:
          type: string
        ownerId:
          type: number
        name:
          type: string
        pictureUrl:
          type: string
        groupId:
          type: number
        portals:
          type: array
          items:
            type: string
        members:
          type: array
          items:
            type: string
        active:
          type: boolean
        externalLines:
          type: array
          items:
            type: string
        meta:
          type: array
          items:
            $ref: '#/components/schemas/ChatMeta'
      required:
        - id
    MessageDto:
      type: object
      properties: {}
    ExternalLineCreateDto:
      type: object
      properties: {}
    ExternalLineUpdateDto:
      type: object
      properties: {}
    SearchResponseDto:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageResponseDto'
        files:
          type: array
          items:
            $ref: '#/components/schemas/MessageResponseDto'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MessageResponseDto'
      required:
        - messages
        - files
        - links

    # messenger end

