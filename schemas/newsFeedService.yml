# newsFeedService OpenAPI paths and definitions
# This file was separated from api.yml for modularity.

openapi: 3.0.0
info:
  title: NewsFeed Service
  version: 1.0.0
paths:
  /newsfeed/v1/posts:
    get:
      summary: Get posts list
      description: Get posts list
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/list"
        - in: query
          name: q
          schema:
            type: string
          example: said
        - in: query
          name: group_id
          schema:
            type: integer
          example: 1
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthorizedError"
      security:
        - bearerAuth: []
    post:
      summary: Create post
      description: |
        Create post

        Use one of `fileIds` or `uploadId` to bind earlier uploaded files to the post that is going to be created.
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/Forbidden"
      security:
        - bearerAuth: []
  /newsfeed/v1/posts/{postId}:
    parameters:
      - $ref: "#/components/parameters/postId"
    patch:
      summary: Update post
      description: Update post. Available only for author.
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
      security:
        - bearerAuth: []
    delete:
      summary: Delete post
      description: Delete post. Available only for author or users with admin permissions.
      responses:
        "204":
          description: No content
      security:
        - bearerAuth: []
# newsfeed end

components:
  parameters:
    page:
      name: page
      in: query
      description: Page number for pagination
      required: false
      schema:
        type: integer
        minimum: 1
    list:
      name: list
      in: query
      description: Number of items per page
      required: false
      schema:
        type: integer
        minimum: 1
    postId:
      name: postId
      in: path
      description: ID of the post
      required: true
      schema:
        type: integer
  responses:
    UnauthorizedError:
      description: Unauthorized
    Forbidden:
      description: Forbidden
